type Address {
  address: String!
  id: ID!
  postal_code: Int!
}

input AddressInput {
  address: String!
  postal_code: Int!
}

# Autogenerated input type of CreatePost
input CreatePostInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  subject: String!
}

# Autogenerated return type of CreatePost
type CreatePostPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  post: Post!
}

type Mutation {
  createPostMutation(input: CreatePostInput!): CreatePostPayload

  # An example field added by the generator
  testField: String
  updateAddressMutation(input: UpdateAddressInput!): UpdateAddressPayload
  updatePostMutation(input: UpdatePostInput!): UpdatePostPayload
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, the cursor to continue.
  endCursor: String

  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String
}

type Post {
  id: ID!
  subject: String!
}

# The connection type for Post.
type PostConnection {
  # A list of edges.
  edges: [PostEdge]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type PostEdge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: Post
}

type Query {
  # An example field added by the generator
  testField: String

  # You can access current_user
  user: User!
}

# Autogenerated input type of UpdateAddress
input UpdateAddressInput {
  addressInput: AddressInput!

  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of UpdateAddress
type UpdateAddressPayload {
  address: Address!

  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated input type of UpdatePost
input UpdatePostInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  id: ID!
  subject: String!
}

# Autogenerated return type of UpdatePost
type UpdatePostPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  post: Post!
}

type User {
  # 住所
  address: Address!

  # e-mail アドレス
  email: String!

  # ユニークな ID
  id: ID!

  # 名前
  name: String!

  # 投稿一覧
  posts(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int
  ): PostConnection!
}